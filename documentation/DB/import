-- Generated by Oracle SQL Developer Data Modeler 4.0.3.853
--   at:        2015-01-09 13:07:02 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g




CREATE TABLE attachments
  (
    attachment_ID INTEGER NOT NULL ,
    issue_ID      INTEGER ,
    message_ID    INTEGER ,
    file_url      VARCHAR2 (255) NOT NULL ,
    file_name     VARCHAR2 (255) NOT NULL ,
    file_size     NUMBER NOT NULL
  ) ;
ALTER TABLE attachments ADD CONSTRAINT attachments_PK PRIMARY KEY ( attachment_ID ) ;

CREATE TABLE issue_comments
  (
    issue_comment_ID NUMBER NOT NULL ,
    issue_ID         INTEGER NOT NULL ,
    subject          VARCHAR2 (255) NOT NULL ,
    text CLOB ,
    created_on TIMESTAMP ,
    author_ID  INTEGER NOT NULL
  ) ;
ALTER TABLE issue_comments ADD CONSTRAINT issue_comments_PK PRIMARY KEY ( issue_comment_ID ) ;

CREATE TABLE issue_log_types
  (
    log_type_ID   INTEGER NOT NULL ,
    log_type_name VARCHAR2 (20) NOT NULL
  ) ;
ALTER TABLE issue_log_types ADD CONSTRAINT issue_log_types_PK PRIMARY KEY ( log_type_ID ) ;
ALTER TABLE issue_log_types ADD CONSTRAINT issue_log_types_name_const CHECK (log_type_name IN ('vytvorenie', 'zmazanie', 'zmena_stavu', 'upraveny', 'iny'));

CREATE TABLE issue_logs
  (
    issue_log_ID      INTEGER NOT NULL ,
    issue_ID          INTEGER NOT NULL ,
    issue_log_type_ID INTEGER NOT NULL ,
    author_id         INTEGER NOT NULL ,
    description       VARCHAR2 (255)
  ) ;
ALTER TABLE issue_logs ADD CONSTRAINT issue_logs_PK PRIMARY KEY ( issue_log_ID ) ;

CREATE TABLE issue_priorities
  (
    priority_ID   INTEGER NOT NULL ,
    priority_name VARCHAR2 (20) NOT NULL
  ) ;
ALTER TABLE issue_priorities ADD CONSTRAINT issue_priorities_PK PRIMARY KEY ( priority_ID ) ;

CREATE TABLE issue_statuses
  (
    status_ID   INTEGER NOT NULL ,
    status_name VARCHAR2 (20) NOT NULL
  ) ;
ALTER TABLE issue_statuses ADD CONSTRAINT issue_statuses_PK PRIMARY KEY ( status_ID ) ;
ALTER TABLE issue_statuses ADD CONSTRAINT issue_statuses_name_const CHECK (status_name IN ('nova', 'prebieha', 'vyriesene', 'zamietnute', 'iny'));

CREATE TABLE issues
  (
    issue_ID INTEGER NOT NULL ,
    user_ID  INTEGER NOT NULL ,
    subject  VARCHAR2(255) NOT NULL ,
    MESSAGE CLOB ,
    priority_ID INTEGER NOT NULL ,
    --  priradeny technik
    admin_ID                       INTEGER NOT NULL ,
    status                         VARCHAR2 (20) NOT NULL ,
    estimated_time                 TIMESTAMP ,
    created_on                     TIMESTAMP NOT NULL ,
    last_update                    TIMESTAMP ,
    issue_statuses_issue_status_ID INTEGER NOT NULL
  ) ;
ALTER TABLE issues ADD CONSTRAINT issues_PK PRIMARY KEY ( issue_ID ) ;

CREATE TABLE messages
  (
    message_ID   INTEGER NOT NULL ,
    from_user_ID INTEGER NOT NULL ,
    to_user_ID   INTEGER NOT NULL ,
    subject      VARCHAR2 (255) ,
    text         VARCHAR2 (255) ,
    read         CHAR (1) NOT NULL ,
    sent_date    TIMESTAMP NOT NULL
  ) ;
ALTER TABLE messages ADD CONSTRAINT messages_PK PRIMARY KEY ( message_ID ) ;

CREATE TABLE notices
  (
    notice_ID INTEGER NOT NULL ,
    subject   VARCHAR2 (255) NOT NULL ,
    text CLOB ,
    created_on TIMESTAMP NOT NULL ,
    --  Je viditelny oznam pre uzivatelov?
    visible   CHAR (1) NOT NULL ,
    author_ID INTEGER NOT NULL
  ) ;
ALTER TABLE notices ADD CONSTRAINT notices_PK PRIMARY KEY ( notice_ID ) ;

CREATE TABLE user_logins
  (
    login_ID           INTEGER NOT NULL ,
    login              VARCHAR2 (20) NOT NULL ,
    user_ID            INTEGER NOT NULL ,
    password           VARCHAR2 (50) NOT NULL ,
    user_roles_role_ID INTEGER NOT NULL
  ) ;
ALTER TABLE user_logins ADD CONSTRAINT user_logins_PK PRIMARY KEY ( login, login_ID ) ;
ALTER TABLE user_logins ADD CONSTRAINT user_logins_uq UNIQUE(login);

CREATE TABLE user_roles
  (
    role_ID   INTEGER NOT NULL ,
    role_name VARCHAR2 (20) NOT NULL
  ) ;
ALTER TABLE user_roles ADD CONSTRAINT user_roles_PK PRIMARY KEY ( role_ID ) ;
ALTER TABLE user_roles ADD CONSTRAINT user_rolesname_const CHECK (role_name IN ('user', 'developer', 'admin'));

CREATE TABLE users
  (
    user_ID    INTEGER NOT NULL ,
    first_name VARCHAR2 (255) NOT NULL ,
    last_name  VARCHAR2 (255) NOT NULL ,
    email      VARCHAR2 (255) ,
    occupation VARCHAR2 (255) ,
    created_on TIMESTAMP NOT NULL
  ) ;
ALTER TABLE users ADD CONSTRAINT users_PK PRIMARY KEY ( user_ID ) ;

ALTER TABLE attachments ADD CONSTRAINT attachments_issues_FK FOREIGN KEY ( issue_ID ) REFERENCES issues ( issue_ID ) ;

ALTER TABLE attachments ADD CONSTRAINT attachments_messages_FK FOREIGN KEY ( message_ID ) REFERENCES messages ( message_ID ) ;

ALTER TABLE messages ADD CONSTRAINT from_user_ID FOREIGN KEY ( from_user_ID ) REFERENCES users ( user_ID ) ;

ALTER TABLE issue_comments ADD CONSTRAINT issue_comments_issues_FK FOREIGN KEY ( issue_ID ) REFERENCES issues ( issue_ID ) ;

ALTER TABLE issue_comments ADD CONSTRAINT issue_comments_users_FK FOREIGN KEY ( author_ID ) REFERENCES users ( user_ID ) ;

ALTER TABLE issue_logs ADD CONSTRAINT issue_logs_issue_log_types_FK FOREIGN KEY ( issue_log_type_ID ) REFERENCES issue_log_types ( log_type_ID ) ;

ALTER TABLE issue_logs ADD CONSTRAINT issue_logs_issues_FK FOREIGN KEY ( issue_ID ) REFERENCES issues ( issue_ID ) ;

ALTER TABLE issue_logs ADD CONSTRAINT issue_logs_users_FK FOREIGN KEY ( author_id ) REFERENCES users ( user_ID ) ;

ALTER TABLE issues ADD CONSTRAINT issues_issue_priorities_FK FOREIGN KEY ( priority_ID ) REFERENCES issue_priorities ( priority_ID ) ;

ALTER TABLE issues ADD CONSTRAINT issues_issue_statuses_FK FOREIGN KEY ( issue_statuses_issue_status_ID ) REFERENCES issue_statuses ( status_ID ) ;

ALTER TABLE issues ADD CONSTRAINT issues_users_FK FOREIGN KEY ( user_ID ) REFERENCES users ( user_ID ) ;

ALTER TABLE issues ADD CONSTRAINT issues_users_FKv2 FOREIGN KEY ( admin_ID ) REFERENCES users ( user_ID ) ;

ALTER TABLE notices ADD CONSTRAINT notices_users_FK FOREIGN KEY ( author_ID ) REFERENCES users ( user_ID ) ;

ALTER TABLE user_logins ADD CONSTRAINT user_ID FOREIGN KEY ( user_ID ) REFERENCES users ( user_ID ) ;

ALTER TABLE user_logins ADD CONSTRAINT user_role FOREIGN KEY ( user_roles_role_ID ) REFERENCES user_roles ( role_ID ) ;

CREATE SEQUENCE issues_issue_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER issues_issue_ID_TRG BEFORE
  INSERT ON issues FOR EACH ROW WHEN (NEW.issue_ID IS NULL) BEGIN :NEW.issue_ID := issues_issue_ID_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE messages_message_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER messages_message_ID_TRG BEFORE
  INSERT ON messages FOR EACH ROW WHEN (NEW.message_ID IS NULL) BEGIN :NEW.message_ID := messages_message_ID_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE user_roles_role_id_SEQ START WITH 1 NOCACHE ORDER;
create or replace TRIGGER user_roles_role_id_TRG BEFORE
  INSERT ON user_roles FOR EACH ROW WHEN (NEW.role_id IS NULL) BEGIN :NEW.role_id := user_roles_role_id_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE users_user_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER users_user_ID_TRG BEFORE
  INSERT ON users FOR EACH ROW WHEN (NEW.user_ID IS NULL) BEGIN :NEW.user_ID := users_user_ID_SEQ.NEXTVAL;
END;
/

CREATE SEQUENCE user_login_ID_SEQ START WITH 1 NOCACHE ORDER ;
CREATE OR REPLACE TRIGGER user_login_ID_TRG BEFORE
  INSERT ON user_logins FOR EACH ROW WHEN (NEW.login_ID IS NULL) BEGIN :NEW.login_ID := user_login_ID_SEQ.NEXTVAL;
END;
/


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            12
-- CREATE INDEX                             0
-- ALTER TABLE                             27
-- CREATE VIEW                              0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           4
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          4
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
